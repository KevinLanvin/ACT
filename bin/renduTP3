Moyart Yann 
Lanvin Kevin

ACT TP3

1/ 	(1,1) -> 0
	(1,2) -> +1
	(2,1) -> +1
	(2,2) -> -2
	(3,1) -> +1
	(3,2) -> +3


2/ 
Si ils sont tous positifs :
	v = - (max(successeurs) + 1)
	 (on essaie de tenir le plus longtemps possible)
Sinon : 
	v =  - (max(successeurs<0) - 1)
	(on essaie de gagner le plus vite possible)


3/ Il met 9 sec à résoudre l'instance (10,7,7,3) : Valeur 13
		(22 sec sur ordinateur perso, moins d'une seconde en dynamique).

		
4/ 
(100, 100, 50, 50) => -198
(100, 100, 48, 52) => +191


5/
Sur une tablette de 127x127 , il n'est pas possible de gagner en 127 coups exactement.


6/ 
On a m*n configurations à tester pour vérifier quels sont les i et j qui peuvent donner 127.
Pour chaque configuration, je passe dans le pire des cas dans m*n autres configurations. 
En effet, comme toutes les configurations calculées sont stockées, cela évite la répétition de calculs, et la complexité perd son ordre de grandeur exponentiel.
Au final, pour tester toutes les possibilités de i et de j pour obtenir une valeur précise, on a une complexite de (m*n)²
Cela représente également le nombre de cases du tableau à 4 dimensions permettant de stocker les résultats.
En effet, dans le pire des cas, on calculera une fois la valeur pour chaque configuration possible.


7/ 
Les 4 premières configurations ne sont que des symétries axiales par rapport à l'axe m ou n.
Dans la réalité, cela signifie qu'il suffit de retourner la plaque de chocolat.
Cela ne change donc pas la résolution du problème.

Les configurations de la deuxième ligne ne sont que des rotations de celles situées juste au dessus.
En effet, il suffit de tourner sa plaquette de 90° dans le sens horaire pour obtenir la configuration du bas. Cela ne change donc pas non plus la résolution du problème.

Toutes les configurations sont donc identiques à la première, car elles n'ont subi que des transformations qui n'impactent pas le résultat de la partie.


8/ 
Pour en tirer parti, il suffit d'appliquer ces transformations à la configuration actuellement testée, et de stocker les 8 résultats pour chaque configuration calculée.
Cela permet de réduire le temps de calcul. Dans le meilleur des cas, on le divise par 8.
Cependant, il pourrait également être judicieux de ne pas stocker les 8 résultats, mais plutôt de garder une seule de ces configurations. Quand on tombera sur une configuration similaire, on pourra alors récupérer la valeur de la première configuration sans recalculer.
Cette méthode permet toujours de ne pas calculer toutes les configurations, mais elle permet également de diviser par 8 le nombre de cases du tableau permettant de stocker les résultats.
Pour que cela fonctionne, il faut convenir d'un formalisme qui déterminera laquelle des 8 configurations on souhaite conserver.
Par exemple, on peut choisir de ne garder que celle qui a le plus petit i, puis le plus petit j en cas de litige.